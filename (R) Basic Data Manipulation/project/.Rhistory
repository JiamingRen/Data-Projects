ds_worldDI %>% filter(str_detect("Series Name", regex("fertility", ignore_case = TRUE)))
ds_worldDI
ds_worldDI %>% filter(str_detect("Series Name", regex("fertility", ignore_case = TRUE)))
df %>% filter(str_detect(df$'Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect(df$'Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect(df$'Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect('Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect(ds_worldDI'Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect(ds_worldDI$'Series Name', regex('fertility', ignore_case = T)))
filter(str_detect(ds_worldDI$'Series Name', regex('fertility', ignore_case = T)))
ds_worldDI %>% filter(str_detect(ds_worldDI$'Series Name', regex('fertility', ignore_case = T)))
unique_series
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
unique_series
len_unique_series
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
len_unique_series %>% length()
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
len_unique_series <- unique_series %>% length()
len_unique_series
#print the first 9 unique series
unique_series %>% head)9
#print the first 9 unique series
unique_series %>% hea(9)
#print the first 9 unique series
unique_series %>% head(9)
fertility <- grep("fertility", unique_series, value = T, ignore.case = T)
fertility <- grep("fertility", unique_series, value = T, ignore.case = T)
#row numbers of rows that contain fertility
nrow(fertility)
fertility <- grep("fertility", unique_series, ignore.case = T)
#row numbers of rows that contain fertility
nrow(fertility)
fertility
fertility <- unique_series %>% grep("fertility", ignore.case = T)
fertility <- grep("fertility", unique_series)
fertility
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
len_unique_series <- unique_series %>% length()
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
len_unique_series <- unique_series %>% length()
len_unique_series
#print the first 9 unique series
unique_series %>% head(9)
fertility
fertility <- grep("fertility", unique_series)
fertility
#row numbers of rows that contain fertility
nrow(fertility)
#row numbers of rows that contain fertility
nrow(fertility)
#get series that contain the keyword Fertility
fertility <- grep("fertility", unique_series)
fertility
#row numbers of rows that contain fertility
view(fertility)
library(stringr)
library(tidyverse)
library(data.table)
library(naniar)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(stringr)
library(tidyr)
library(data.table)
library(dplyr)
library(naniar)
ds_worldDI = read_csv("World_Development_Indicators.csv")
##display first 5 records
head(ds_worldDI)
#number of columns
print("number of columns")
ncol(ds_worldDI)
#number of rows
print("number of rows")
nrow(ds_worldDI)
#the structure of dataset
print("the structure of dataset")
str(ds_worldDI)
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI$"Series Name"))
len_unique_series <- unique_series %>% length()
len_unique_series
#print the first 9 unique series
unique_series %>% head(9)
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series[str_detect(unique_series, regex("fertility",ignore_case = TRUE))]
unique_fertility %>% length()
#row numbers of rows that contain fertility
#select country name and 2019.00 columns
gdp_2019 <- ds_worldDI %>% filter(ds_worldDI$"Series Name" == "GDP (current US$)") %>% select("Country Name", "2019.00")
#sort the rows by the column 2019.00 and select bottom 5 countries
bot <- gdp_2019 %>% arrange(gdp_2019$"2019.00") %>% head(5)
bot
#sort the rows by the column 2019.00 and select top 5 countries
top <- gdp_2019 %>% arrange(desc(gdp_2019$"2019.00")) %>% head(5)
top
#combined two top and bot datasets
filtered_countries <- rbind(top,bot)$"Country Name"
#filter and keep the GDP data related to the 10 coutries
filtered_ds_worldDI <- ds_worldDI %>% filter(ds_worldDI$"Country Name" %in% filtered_countries)
filtered_ds_worldDI
#visualize each of year columns with the corresponding missing percentages
vis_miss(filtered_ds_worldDI[,c(-1,-2,-3,-4)])
#convert the table from wide to long. group by year and value
year_value <- filtered_ds_worldDI %>% gather(Year, Value, -"Country Name", -"Country Code", -"Series Name",  -"Series Code")
#print into a table about how much missing value for each year in percentage
year_value %>%
group_by(Year) %>%
summarise(Percentage = mean(is.na(Value)*100), Na_rows= is.na(Value) %>% sum(), total_rows = Value %>% length())
#statistical data only for min and max and mean
year_value %>%
group_by(Year) %>%
summarise(Min =Value %>% min(na.rm = T), Max = Value %>% max(na.rm=T), Mean = Value %>%  mean(na.rm=T)) %>%
filter(Year == c("2010.00","2011.00","2012.00","2013.00","2014.00","2015.00","2016.00","2017.00","2018.00","2019.00"))
#all statistical from 2010 - 2019
summary(filtered_ds_worldDI[55:length(colnames(filtered_ds_worldDI))])
#select china and gdp rows
China_df<-year_value %>%
filter(`Country Name` == "China") %>%
filter(`Series Name` == "GDP (current US$)")
print("max gdp:")
China_df$Value %>% max()
print("min gdp:")
China_df$Value %>% min()
#filter to get GDP (current US$) series for each Country in each year
ten_gdp <- year_value %>%
filter(`Series Name` == "GDP (current US$)")
#plot all ten countries in one graph
ten_gdp %>%
ggplot(aes(Year, Value, group=`Country Name`, color = `Country Name`))+
geom_line() +
geom_point()
#the advantage is that it is easier to compare each country in one graph
#the disadvantage is that the top 5 and bot 5 countries has dramastic different of GDP. From the graph, you can see the bot countries are stacked into one line.
#add a Period columns
ten_gdp$Period<-''
#label Periods
ten_gdp$Period[ten_gdp$Year <1970 &ten_gdp$Year >=1960]<- "Period1"
ten_gdp$Period[ten_gdp$Year <1980 &ten_gdp$Year >=1970]<- "Period2"
ten_gdp$Period[ten_gdp$Year <1990 &ten_gdp$Year >=1980]<- "Period3"
ten_gdp$Period[ten_gdp$Year <2000 &ten_gdp$Year >=1990]<- "Period4"
ten_gdp$Period[ten_gdp$Year <2010 &ten_gdp$Year >=2000]<- "Period5"
ten_gdp$Period[ten_gdp$Year <2020 &ten_gdp$Year >=2010]<- "Period6"
#create a table that shows mean of each period for each country
average_period <- ten_gdp %>% group_by(`Country Name`, Period) %>% summarise(average = Value %>% mean(na.rm = T), .groups = 'drop')
average_period
#plot graph for each country
average_period %>%
ggplot(aes(Period, average,color=`Country Name`,group=`Country Name`))+
geom_line()+
facet_wrap(~`Country Name`,scale="free")
#subset America with GDP
America <- filtered_ds_worldDI %>% filter(`Country Name` == "United States") %>% filter(`Series Name` == "GDP (current US$)")
#swap wide table to long table
America <- America %>% gather(Year,Value, -"Country Name", -"Country Code", -"Series Name", -"Series Code")
#assign mean value to NA
America$Value[is.na(America$Value)] <- America$Value %>% mean(na.rm=T)
America
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI["Series Name","Series Code"]))
len_unique_series <- unique_series %>% length()
len_unique_series
unique_series
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI["Series Name"]))
unique_series
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI[c("Series Name","Series Codes")]))
#Total unique values for the Columns Series Name
unique_series <- unique(na.omit(ds_worldDI[c("Series Name","Series Code")]))
unique_series
#get the length of unique series
len_unique_series <- unique_series %>% length()
len_unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% length()
len_unique_series
#Total unique values for the Columns Series Name and code
unique_series <- unique(na.omit(ds_worldDI[c("Series Name","Series Code")]))
unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% length()
len_unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% length()
unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% length()
len_unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% count()
len_unique_series
View(unique_series)
unique_series
View(len_unique_series)
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series[str_detect(unique_series, regex("fertility",ignore_case = TRUE))]
unique_fertility %>% length()
#row numbers of rows that contain fertility
fertility %>% length()
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series[str_detect(unique_series, regex("fertility",ignore_case = TRUE))]
unique_fertility %>% length()
#row numbers of rows that contain fertility
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series[str_detect(unique_series["Series Name"], regex("fertility",ignore_case = TRUE))]
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series[str_detect(unique_series["Series Name"], regex("fertility",ignore_case = TRUE))]
unique_fertility %>% length()
#row numbers of rows that contain fertility
unique_fertility
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series$`Series Name`[str_detect(regex("fertility",ignore_case = TRUE))]
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% str_detect(`Series Name`, regex("fertility",ignore_case = TRUE))
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% str_detect(unique_series`Series Name`, regex("fertility",ignore_case = TRUE))
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% str_detect(unique_series$`Series Name`, regex("fertility",ignore_case = TRUE))
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
unique_fertility %>% length()
#row numbers of rows that contain fertility
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = TRUE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
unique_fertility %>% length()
#row numbers of rows that contain fertility
# Q1
wd <- read_csv("World_Development_Indicators.csv")
head(wd, 5)
# check directory first!
getwd() # ctrl + enter
library(tidyverse)
library(ggplot2)
library(dplyr)
# Q1
wd <- read_csv("World_Development_Indicators.csv")
head(wd, 5)
cat(ncol(wd),'columns\n')
cat(nrow(wd),'rows\n')
# Q2
unique_series <- unique(na.omit(select(wd,`Series Code`,`Series Name`)))
cat(nrow(unique_series),'unique series values\n')
head(unique_series, 9)
knitr::opts_chunk$set(echo = TRUE)
#Total unique values for the Columns Series Name and code
unique_series <- unique(na.omit(ds_worldDI[c("Series Name","Series Code")]))
unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% count()
len_unique_series
head(unique_series, 9)
unique_series %>%
filter(str_detect(`Series Name`, regex('fertility', ignore_case = FALSE))) %>%
nrow() %>%
cat('series contain the keyword "fertility" (case insensitive)')
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = FALSE)), ]
fertility %>% length()
fertility
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = FALSE)), ]
fertility
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = F)), ]
fertility
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = F))
#row numbers of rows that contain fertility
unique_fertility %>% length()
# Q2
unique_series <- unique(na.omit(select(wd,`Series Code`,`Series Name`)))
cat(nrow(unique_series),'unique series values\n')
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% length(na.rm=T)
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% length(,na.rm=T)
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
length(fertility,na.rm=T)
fertility %>% nrow(na.rm=T)
fertility %>% nrow()
unique_series %>%
filter(str_detect(`Series Name`, regex('fertility', ignore_case = FALSE))) %>%
nrow() %>%
cat('series contain the keyword "fertility" (case insensitive)')
unique_series %>%
filter(str_detect(`Series Name`, regex('fertility', ignore_case = FALSE))) %>%
nrow() %>%
cat('series contain the keyword "fertility" (case insensitive)')
#Total unique values for the Columns Series Name and code
unique_series <- unique(na.omit(ds_worldDI[c("Series Name","Series Code")]))
unique_series
#get the length of unique series
len_unique_series <- unique_series[1] %>% count()
len_unique_series
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility
fertility %>% nrow()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = FALSE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = FALSE)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
unique_fertility
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
unique_fertility
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = F))
#row numbers of rows that contain fertility
unique_fertility %>% length()
unique_fertility
#get series that contain the keyword Fertility
fertility <- ds_worldDI[str_detect(ds_worldDI$"Series Name", regex("fertility",ignore_case = T)), ]
fertility %>% length()
#get unique series that contain the keyword Fertility
unique_fertility <- unique_series %>% filter(`Series Name` == regex("Fertility", ignore_case = T))
#row numbers of rows that contain fertility
unique_fertility %>% length()
unique_fertility
w
# Q3
wd_filter_gpa_2019 <- wd %>%
filter(`Series Name` == 'GDP (current US$)') %>%
select("Country Name", "2019.00") %>%
na.omit()
top_5 <- wd_filter_gpa_2019 %>%
arrange(`2019.00`) %>%
head(5)
tail_5 <- wd_filter_gpa_2019 %>%
arrange(`2019.00`) %>%
tail(5)
countries_10 <- rbind(top_5,tail_5)$`Country Name`
wd_filter <- wd %>% filter(wd$`Country Name` %in% countries_10)
# Q2
unique_series <- unique(na.omit(select(wd,`Series Code`,`Series Name`)))
cat(nrow(unique_series),'unique series values\n')
head(unique_series, 9)
unique_series %>%
filter(str_detect(`Series Name`, regex('fertility', ignore_case = FALSE))) %>%
nrow() %>%
cat('series contain the keyword "fertility" (case insensitive)')
# Q3
wd_filter_gpa_2019 <- wd %>%
filter(`Series Name` == 'GDP (current US$)') %>%
select("Country Name", "2019.00") %>%
na.omit()
top_5 <- wd_filter_gpa_2019 %>%
arrange(`2019.00`) %>%
head(5)
tail_5 <- wd_filter_gpa_2019 %>%
arrange(`2019.00`) %>%
tail(5)
countries_10 <- rbind(top_5,tail_5)$`Country Name`
wd_filter <- wd %>% filter(wd$`Country Name` %in% countries_10)
# Q4 ???
library(VIM)
library(Amelia)
library(visdat)
library(naniar)
wd_filter %>%
vis_miss()+
ggplot2::theme(legend.position = 'bottom')
# plot the missingness percentages for each column
summary(aggr(wd_filter))
# plot the missing map
missmap(wd_filter)
miss_table <- miss_var_summary(wd_filter)
miss_table
miss_table %>%
filter(n_miss!=0) %>% nrow()
# Q5
summary(wd_filter[grep(2010.00,c(colnames(wd_filter))):grep(2019.00,c(colnames(wd_filter)))])
# Q6
countries_gdp <- wd_filter %>%
filter(`Series Name` == 'GDP (current US$)') %>%
select(-`Country Code`, -`Series Name`, -`Series Code`) %>%
gather(Year, GDP, -`Country Name`)
countries_gdp$Year <- countries_gdp$Year %>% as.numeric()
China <- countries_gdp %>%
filter(`Country Name` == "China")
arrange(China,GDP) %>%
head(1) %>%
select(Year)
arrange(China,GDP) %>%
tail(1) %>%
select(Year)
# Q7
countries_gdp %>%
ggplot(aes(x=Year, y=GDP, group=`Country Name`, colour=`Country Name`)) +
geom_line() +
scale_y_continuous(breaks = 100, labels = 'a')
# Q8
countries_gdp_add <- transform(countries_gdp,Period_year = paste(floor(Year/10)*10,'-',floor(Year/10)*10+9))
countries_gdp_add <- transform(countries_gdp_add,Period_name = paste('Period',floor((Year-1960)/10)+1))
countries_gdp_add %>%
group_by(`Country.Name`, Period_year,Period_name) %>%
summarise(AVG_GDP = mean(GDP))
# Q9
America <- countries_gdp %>%
filter(`Country Name` == "United States")
library(visdat)
America %>%
vis_miss()+
ggplot2::theme(legend.position = 'bottom')
America_mean <- America %>%
impute_mean_at(vars(c(Year,GDP)))
America_mean %>%
vis_miss()+
ggplot2::theme(legend.position = 'bottom')
#add a Period columns
ten_gdp$Period<-''
#label Periods
ten_gdp$Period[ten_gdp$Year <1970 &ten_gdp$Year >=1960]<- "Period1"
ten_gdp$Period[ten_gdp$Year <1980 &ten_gdp$Year >=1970]<- "Period2"
ten_gdp$Period[ten_gdp$Year <1990 &ten_gdp$Year >=1980]<- "Period3"
ten_gdp$Period[ten_gdp$Year <2000 &ten_gdp$Year >=1990]<- "Period4"
ten_gdp$Period[ten_gdp$Year <2010 &ten_gdp$Year >=2000]<- "Period5"
ten_gdp$Period[ten_gdp$Year <2020 &ten_gdp$Year >=2010]<- "Period6"
#create a table that shows mean of each period for each country
average_period <- ten_gdp %>% group_by(`Country Name`, Period) %>% summarise(average = Value %>% mean(na.rm = T), .groups = 'drop')
average_period
#plot graph for each country
average_period %>%
ggplot(aes(Period, average,color=`Country Name`,group=`Country Name`))+
geom_line()+
facet_wrap(~`Country Name`,scale="free")
